{"version":3,"sources":["Mapa.png","Service.js","components/styledComponents.jsx","components/Country.jsx","components/Countries.jsx","components/Search.jsx","components/Select.jsx","components/Sort.jsx","components/CountryRoute.jsx","components/Home.jsx","components/Login.jsx","components/Register.jsx","components/Logout.jsx","App.js","reportWebVitals.js","index.js"],"names":["getAllUsers","axios","get","StyledLoginandRegisterButton","styled","input","StyledLogoutButton","button","LoginAndRegisterDiv","div","StyledBtnForSingleCountry","StyledBtnPagination","StyledCountriesDiv","Mapa","StyledNav","nav","img","Country","countries","country","single","useState","borders","setBorders","indexPopulationAndArea","setindexPopulationAndArea","stateForBtnRangByPopulation","setStateForBtnRangByPopulation","stateForBtnBorders","setStateForBtnBorders","name","common","href","maps","googleMaps","style","color","capital","className","onClick","length","map","code","then","res","prev","data","border","i","Math","random","population","console","log","tmpPopulation","forEach","push","sort","a","b","indexPopulation","indexOf","tmpArea","area","indexArea","rangByPopulationAndArea","src","flags","png","alt","width","to","height","Countreis","select","inputSearch","setOnPage","countriesAll","countriesSelect","change","currPage","setCurrPage","onPage","numPages","ceil","pages","setPages","kopija","setKopija","useEffect","tmp","changePage","page","start","end","slice","background","disabled","value","official","Search","setInputSearch","type","placeholder","onChange","e","target","Select","setSelect","setCountriesSelect","filter","region","includes","Set","Sort","setChange","user","copyCountries","setCopyCountries","PopulationFrom9to1","PopulationFrom1to9","AreaFrom9to1","AreaFrom1to9","CountryRoute","countryName","useParams","find","Home","loggedIn","Login","setUser","setReloadOnLogin","users","setUsers","username","setUsername","password","setPassword","history","useHistory","onSubmit","preventDefault","el","Register","email","setEmail","newUser","some","post","Logout","App","setCountries","reloadOnLogin","fja","Countries","basename","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cbd6ae8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Mapa.74bd22f6.png\";","import axios from 'axios'\r\n\r\n// export const getAllUsers = () => axios.get(`http://localhost:3006/users`) // ovo je za LocalHost\r\nexport const getAllUsers = () => axios.get(`https://project-pagination.herokuapp.com/users`)\r\n\r\n// export const postNewUser = (user) => axios.post(`http://localhost:3006/users`, user) // ovo je za LocalHost\r\nexport const postNewUser = (user) => axios.post(`https://project-pagination.herokuapp.com/users`, user)\r\n\r\nexport const getAllCountries = () => axios.get('https://restcountries.com/v3.1/all')","import styled from 'styled-components'\r\nimport Mapa from '../Mapa.png';\r\n\r\n\r\nexport const StyledLoginandRegisterButton = styled.input`\r\ncolor: white;\r\nfont-size:1em;\r\nborder-radius: 10px;\r\nbackground: blue;\r\nmargin:25px;\r\n:hover{\r\nbackground:green;\r\n}\r\n`\r\n\r\nexport const StyledLogoutButton = styled.button`\r\ncolor: white;\r\nfont-size:1em;\r\nborder-radius: 10px;\r\nbackground: red;\r\nmargin:23px;\r\n:hover{\r\nbackground:green;\r\n}\r\n`\r\n\r\n\r\nexport const LoginAndRegisterDiv = styled.div`\r\ndisplay:flex;\r\njustify-content:center;\r\nalign-items:flex-end;\r\n`\r\n\r\n\r\nexport const Logoutdiv = styled.div`\r\nbackground:green;\r\ndisplay:flex;\r\njustify-content:flex-end;\r\n:hover{\r\n    background:red;\r\n    }\r\nbutton{color: white;\r\n    font-size:0,5em;\r\n    border-radius: 20px;\r\n    background: orange;\r\n    :hover{\r\n    background:red;\r\n    }\r\n}\r\n`\r\n\r\n\r\nexport const StyledBtnForSingleCountry = styled.button`\r\ncolor: red;\r\nfont-size:1em;\r\nborder-radius: 10px;\r\nbackground: white;\r\n\r\n:hover{\r\n    background:lightblue;\r\n    }\r\n&.transform{\r\n    background: orange;\r\n    \r\n}\r\n}\r\n`\r\n\r\n\r\n\r\n\r\nexport const StyledBtnPagination = styled.button`\r\ncolor: white;\r\nfont-size:1em;\r\nborder-radius: 10px;\r\nbackground: orange;\r\n&.transform{\r\n    \r\n    background:red;\r\n    display:hidden;\r\n}\r\n}\r\n`\r\n\r\n\r\nexport const StyledCountriesDiv = styled.div`\r\nmargin:2px;\r\npadding:20px;\r\nwidth:45rm;\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\njustify-content: space-between;\r\nbackground-image: url(${Mapa});\r\nalign-items:flex-start;\r\n`\r\n\r\n\r\n\r\nexport const StyledNav = styled.nav`\r\nwidth:85rm;\r\nbackground-image: url(${Mapa});\r\ndisplay: flex;\r\n\r\njustify-content: space-around;\r\n`\r\n\r\n\r\nexport const styledImg = styled.img`\r\nwidth:200px;\r\nheight: 200px;\r\nborder - radius: 30px;\r\n`\r\n","import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { getAllCountries } from \"../Service\";\r\nimport { styledImg, StyledBtnForSingleCountry } from \"./styledComponents\";\r\n\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Country = ({ countries, country, single }) => {\r\n\r\n    const [borders, setBorders] = useState([])\r\n\r\n    const [indexPopulationAndArea, setindexPopulationAndArea] = useState(null)\r\n\r\n\r\n    let [stateForBtnRangByPopulation, setStateForBtnRangByPopulation] = useState(false)\r\n    let [stateForBtnBorders, setStateForBtnBorders] = useState(false)\r\n\r\n\r\n    function rangByPopulationAndArea(countries, country) {\r\n\r\n        let tmpPopulation = []\r\n        countries.forEach(country => tmpPopulation.push(country.population))\r\n        tmpPopulation.sort((a, b) => { if (a > b) return -1 })\r\n        let indexPopulation = tmpPopulation.indexOf(country.population)\r\n\r\n\r\n        let tmpArea = []\r\n        countries.forEach(country => tmpArea.push(country.area))\r\n        tmpArea.sort((a, b) => { if (a > b) return -1 })\r\n        let indexArea = tmpArea.indexOf(country.area)\r\n\r\n\r\n        return <>\r\n            <b>\r\n                <p> In aspect of population {country.name.common} is number {indexPopulation + 1} in the world with {tmpPopulation[indexPopulation]} citizens </p>\r\n                <p>In ascpet of Area {country.name.common} is number {indexArea + 1} in the world with {tmpArea[indexArea]}    km^2</p>\r\n            </b>\r\n        </>\r\n    }\r\n\r\n\r\n\r\n    return single ?\r\n        (\r\n\r\n            <div >\r\n                <h2 >Basic information about {country.name.common}</h2>\r\n\r\n                <a href={country.maps.googleMaps} ><h2 style={{ color: 'green' }}>You can find {country.name.common} on google maps on this link </h2> </a>\r\n\r\n                <b> <p>Capital city: {country.capital}</p></b>\r\n                {/* BTN for Borders */}\r\n\r\n                <div >\r\n                    <StyledBtnForSingleCountry className={stateForBtnBorders ? 'transform' : ''} onClick={() => {\r\n\r\n                        setStateForBtnBorders(!stateForBtnBorders)\r\n\r\n                        if (borders.length < country.borders?.length) {\r\n                            country.borders.map(code => axios.get(`https://restcountries.com/v3.1/alpha/${code}`).then(res => {\r\n                                setBorders(prev => [...prev, res.data[0].name.common])\r\n                            }))\r\n                        }\r\n                    }}> {stateForBtnBorders ? `Hide ${country.name.common} 'Borders` : `Click here for ${country.name.common} 'Borders`} </StyledBtnForSingleCountry>\r\n\r\n\r\n                    {\r\n                        stateForBtnBorders ?\r\n\r\n                            borders.length !== 0 ?\r\n                                <>\r\n                                    <b>\r\n                                        <p> {country.name.common} has common border with {borders.length} countries:</p>\r\n\r\n                                        <ul>{borders.map((border, i) => <li key={Math.random() * 1000}>{i + 1}: {border}  </li>)} </ul>\r\n\r\n                                    </b>\r\n                                </>\r\n                                :\r\n                                <><b><p> {country.name.common} has no borders</p></b></>\r\n\r\n                            :\r\n                            <></>\r\n                    }\r\n                </div>\r\n\r\n\r\n                <b> <p>{country.name.common} has population of {country.population} citizens </p></b>\r\n\r\n\r\n\r\n\r\n                {/* BTN Rang by Population */}\r\n                <div>\r\n\r\n                    <StyledBtnForSingleCountry className={stateForBtnRangByPopulation ? 'transform' : ''} onClick={() => {\r\n                        console.log(countries);\r\n                        setStateForBtnRangByPopulation(!stateForBtnRangByPopulation)\r\n\r\n                        setindexPopulationAndArea(rangByPopulationAndArea(countries, country))\r\n\r\n                    }}>{stateForBtnRangByPopulation ? 'Hide Rang By Population' : `Click to see Rang ${country.name.common} By Population`}</StyledBtnForSingleCountry>\r\n\r\n\r\n                    {stateForBtnRangByPopulation ? <div>    {indexPopulationAndArea}</div> : <></>}\r\n\r\n                </div>\r\n\r\n\r\n\r\n                <p><b>Flag of {country.name.common}</b></p>\r\n\r\n                <div>\r\n                    <img src={country.flags.png} alt={`Flag of ${country.name.common}`} style={{ width: '150px' }} />\r\n                </div>\r\n\r\n            </div >\r\n        )\r\n\r\n        :\r\n\r\n        (\r\n            <div>\r\n                <h1>{country.name.common}</h1>\r\n\r\n                <Link to={`/countries/${country.name.common}`}><h2>Read more about {country.name.common}</h2></Link>\r\n\r\n\r\n                <img src={country.flags.png} alt={`Flag of ${country.name.common}`} style={{ width: '500px', height: '250px ' }} />\r\n\r\n            </div>\r\n        )\r\n\r\n}\r\n\r\nexport default Country;","import Country from \"./Country\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { StyledCountriesDiv } from \"./styledComponents\";\r\nimport { StyledBtnPagination } from \"./styledComponents\";\r\n\r\n\r\nconst Countreis = ({ countries, select, inputSearch, setOnPage, countriesAll, countriesSelect, change, currPage, setCurrPage, onPage }) => {\r\n    // console.log(countriesSelect)\r\n    let numPages = select ? Math.ceil(countriesSelect.length / 10) : Math.ceil(countriesAll.length / 10)\r\n    // console.log(numPages);\r\n    let [pages, setPages] = useState([])\r\n\r\n\r\n\r\n    ///////////////////////////////////////////////////////////\r\n\r\n    const [kopija, setKopija] = useState(countries)\r\n    const [promenaKopije, setPromenaKopije] = useState(0)\r\n\r\n    useEffect(() => {\r\n        setKopija(onPage)\r\n        console.log('sad se ucitala kopija')\r\n        console.log(kopija)\r\n\r\n    }, [select, change])\r\n\r\n    // ////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        let tmp = []\r\n        for (let i = 0; i < numPages; i++) {\r\n            tmp.push(i)\r\n        }\r\n        setPages(tmp)\r\n    }, [select, inputSearch, countries, change])\r\n\r\n\r\n    const changePage = (page) => {\r\n        setCurrPage(page)\r\n        let start = page * 10\r\n        let end = start + 10\r\n\r\n\r\n        // select ? setOnPage(countriesSelect.slice(start, end)) : setOnPage(countriesAll.slice(start, end))\r\n\r\n\r\n        // //////////////////////////////////////////////////////////////\r\n\r\n        // console.log('ssssssssssssssss')\r\n        // console.log(onPage)\r\n        // console.log(kopija)\r\n        // console.log(countries.slice(start, end))\r\n        // console.log('ssssssssssssssss')\r\n\r\n        //setPromenaKopije((prev) => prev + 1) // ne sme da se kuca\r\n\r\n        // setOnPage(kopija.slice(start, end))\r\n\r\n\r\n        setOnPage(kopija.length !== 0 ? kopija.slice(start, end) : countriesAll.slice(start, end))\r\n\r\n        // /////////////////////////////////////////////////////\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div style={{\r\n            background: 'grey'\r\n        }}>\r\n            <StyledBtnPagination disabled={currPage >= pages.length - 1} onClick={() => { changePage(currPage + 1) }}>Next</StyledBtnPagination>\r\n\r\n\r\n            {\r\n                pages.map(page => <StyledBtnPagination className={page == currPage ? 'transform' : ''} key={Math.random() * 1000000} onClick={() => { changePage(page) }\r\n                }> {page + 1} </StyledBtnPagination>)\r\n            }\r\n\r\n\r\n            <StyledBtnPagination value='Preview' disabled={currPage <= 0} onClick={() => { changePage(currPage - 1) }}> Preview </StyledBtnPagination>\r\n\r\n\r\n            <StyledCountriesDiv  >\r\n                {countries.map(country => <Country key={country.name.official} countries={countriesAll} country={country} single={countries.length === 1} />)}\r\n            </StyledCountriesDiv>\r\n\r\n        </div >\r\n\r\n    );\r\n}\r\n\r\nexport default Countreis;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // //////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// // Ovo ispod je ako se u paginaciji ne zadrzava opcija sort \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import Country from \"./Country\";\r\n// import { useState, useEffect } from \"react\";\r\n// import { StyledCountriesDiv } from \"./styledComponents\";\r\n// import { StyledBtnPagination } from \"./styledComponents\";\r\n\r\n\r\n// const Countreis = ({ countries, select, inputSearch, setOnPage, countriesAll, countriesSelect, change, currPage, setCurrPage, onPage }) => {\r\n//     // console.log(countriesSelect)\r\n//     let numPages = select ? Math.ceil(countriesSelect.length / 10) : Math.ceil(countriesAll.length / 10)\r\n//     // console.log(numPages);\r\n//     let [pages, setPages] = useState([])\r\n\r\n\r\n//     // const [currPage, setCurrPage] = useState(0)\r\n\r\n\r\n\r\n//     useEffect(() => {\r\n//         let tmp = []\r\n//         for (let i = 0; i < numPages; i++) {\r\n//             tmp.push(i)\r\n//         }\r\n//         setPages(tmp)\r\n//     }, [select, inputSearch, countries, change])\r\n\r\n\r\n//     const changePage = (page) => {\r\n//         setCurrPage(page)\r\n//         let start = page * 10\r\n//         let end = start + 10\r\n//         console.log(onPage);\r\n//         console.log(countriesSelect);\r\n\r\n//         select ? setOnPage(countriesSelect.slice(start, end)) : setOnPage(countriesAll.slice(start, end))\r\n\r\n\r\n//         // let copyOnPage = [...onPage]\r\n\r\n//         // select ? setOnPage(copyOnPage.slice(start, end)) : setOnPage(countriesAll.slice(start, end))\r\n\r\n//         // console.log('ssssssssssssssss')\r\n//         // console.log(onPage)\r\n//         // console.log('ssssssssssssssss')\r\n//     }\r\n\r\n//     return (\r\n//         <div >\r\n//             <StyledBtnPagination disabled={currPage >= pages.length - 1} onClick={() => { changePage(currPage + 1) }}>Next</StyledBtnPagination>\r\n\r\n\r\n//             {pages.map(page => <StyledBtnPagination className={page == currPage ? 'transform' : ''} key={Math.random() * 1000000} onClick={() => { changePage(page) }\r\n//             }> {page + 1} </StyledBtnPagination>)}\r\n\r\n\r\n//             {/*             \r\n//             {pages.map(page => <StyledBtnPagination key={Math.random() * 1000000} onClick={() => { changePage(page) }\r\n//             }> {page} </StyledBtnPagination>)} */}\r\n\r\n\r\n\r\n\r\n//             <StyledBtnPagination value='Preview' disabled={currPage <= 0} onClick={() => { changePage(currPage - 1) }}> Preview </StyledBtnPagination>\r\n\r\n\r\n\r\n\r\n//             <StyledCountriesDiv  >\r\n//                 {/* {countries.slice(0, 10).map(country => <Country key={country.name.official} country={country} />)} */}\r\n//                 {countries.map(country => <Country key={country.name.official} countries={countriesAll} country={country} single={countries.length === 1} />)}\r\n//             </StyledCountriesDiv>\r\n\r\n//         </div >\r\n\r\n//     );\r\n// }\r\n\r\n// export default Countreis;\r\n\r\n\r\n\r\n\r\n\r\n","const Search = ({ setInputSearch }) => {\r\n    return (\r\n        <input type='search' placeholder='search by name...' onChange={(e) => {\r\n            setInputSearch(e.target.value)\r\n        }} />\r\n    );\r\n}\r\n\r\nexport default Search;","const Select = ({ countries, setSelect, setOnPage, setCountriesSelect, setCurrPage }) => {\r\n    return (\r\n        <select onChange={(e) => {\r\n            setSelect(e.target.value)\r\n            setOnPage(countries.filter(country => country.region.includes(e.target.value)))\r\n            setCountriesSelect(countries.filter(country => country.region.includes(e.target.value)))\r\n            // e.target.value = '-1'\r\n            setCurrPage(0)\r\n        }} >\r\n\r\n            <option value='-1'>Choose continent</option>\r\n\r\n            <option value=\"\" >All</option>\r\n            {[...new Set(countries.map(country => country.region))].map(region => <option key={region} value={region}>{region}</option>)}\r\n        </select>\r\n\r\n    );\r\n}\r\n\r\nexport default Select;\r\n\r\n","import { useState, useEffect } from \"react\"\r\nconst Sort = ({ countries, onPage, setOnPage, select, setChange, change, setCurrPage, user }) => {\r\n\r\n\r\n    const [copyCountries, setCopyCountries] = useState(onPage)\r\n\r\n\r\n    useEffect(() => {\r\n        setCopyCountries(onPage.length == 0 ? [...countries] : onPage)\r\n\r\n    }, [change, select, countries, user])\r\n\r\n\r\n\r\n    const PopulationFrom9to1 = (a, b) => {\r\n        if (a.population > b.population) {\r\n            return -1\r\n        }\r\n    }\r\n    const PopulationFrom1to9 = (a, b) => {\r\n        if (a.population < b.population) {\r\n            return -1\r\n        }\r\n    }\r\n\r\n    const AreaFrom9to1 = (a, b) => {\r\n        if (a.area > b.area) {\r\n            return -1\r\n        }\r\n    }\r\n    const AreaFrom1to9 = (a, b) => {\r\n        if (a.area < b.area) {\r\n            return -1\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <select onChange={(e) => {\r\n\r\n                console.log(e.target.value)\r\n\r\n                if (e.target.value === 'PopulationFrom9to1') {\r\n\r\n                    setOnPage(copyCountries.sort(PopulationFrom9to1))\r\n\r\n                }\r\n                if (e.target.value === 'PopulationFrom1to9') {\r\n\r\n                    setOnPage(copyCountries.sort(PopulationFrom1to9))\r\n\r\n                }\r\n\r\n\r\n                if (e.target.value === 'AreaFrom9to1') {\r\n\r\n                    setOnPage(copyCountries.sort(AreaFrom9to1))\r\n\r\n                }\r\n                if (e.target.value === 'AreaFrom1to9') {\r\n\r\n                    setOnPage(copyCountries.sort(AreaFrom1to9))\r\n\r\n                }\r\n\r\n\r\n\r\n                setChange(prev => prev + 1)\r\n                console.log(select)\r\n                console.log(countries.filter(country => country.region.includes(select)))\r\n\r\n                e.target.value = '-1'\r\n\r\n                setCurrPage(0)\r\n\r\n            }}>\r\n\r\n                <option value='-1'> Choose option for sort</option>\r\n\r\n                <option value='PopulationFrom9to1'>Sort By Population form Biggest to Lowest</option>\r\n                <option value='PopulationFrom1to9'>Sort By Population form Lowest to Biggest</option>\r\n\r\n                <option value='AreaFrom9to1'>Sort By Area form Biggest to Lowest</option>\r\n                <option value='AreaFrom1to9'>Sort By Area form Lowest to Biggest</option>\r\n\r\n            </select>\r\n\r\n        </div >\r\n    )\r\n}\r\nexport default Sort;\r\n\r\n\r\n","import { useParams } from \"react-router\";\r\n\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport { StyledBtnForSingleCountry } from \"./styledComponents\";\r\nimport { LoginAndRegisterDiv } from \"./styledComponents\";\r\n\r\nconst CountryRoute = ({ countries }) => {\r\n\r\n    // let obj = useParams()\r\n    // console.log(obj)\r\n\r\n    let { countryName } = useParams()\r\n    // console.log(countryName)\r\n    // console.log(countries)\r\n\r\n    let country = countries.find(country => country.name.common == countryName)\r\n    // console.log(country)\r\n\r\n    useEffect(() => {\r\n        console.log('1')\r\n        return () => console.log('2')\r\n    }, [])\r\n\r\n\r\n    const [borders, setBorders] = useState([])\r\n\r\n    const [indexPopulationAndArea, setindexPopulationAndArea] = useState(null)\r\n\r\n\r\n    let [stateForBtnRangByPopulation, setStateForBtnRangByPopulation] = useState(false)\r\n    let [stateForBtnBorders, setStateForBtnBorders] = useState(false)\r\n\r\n\r\n    function rangByPopulationAndArea(countries, country) {\r\n\r\n        let tmpPopulation = []\r\n        countries.forEach(country => tmpPopulation.push(country.population))\r\n        tmpPopulation.sort((a, b) => { if (a > b) return -1 })\r\n        let indexPopulation = tmpPopulation.indexOf(country.population)\r\n\r\n\r\n        let tmpArea = []\r\n        countries.forEach(country => tmpArea.push(country.area))\r\n        tmpArea.sort((a, b) => { if (a > b) return -1 })\r\n        let indexArea = tmpArea.indexOf(country.area)\r\n\r\n\r\n        return <>\r\n            <b>\r\n                <p> In aspect of population {country.name.common} is number {indexPopulation + 1} in the world with {tmpPopulation[indexPopulation]} citizens </p>\r\n                <p>In ascpet of Area {country.name.common} is number {indexArea + 1} in the world with {tmpArea[indexArea]}    km^2</p>\r\n            </b>\r\n        </>\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                !country ? '' :\r\n\r\n                    < div >\r\n                        <h2>Basic information about {country.name.common}</h2>\r\n\r\n                        <p> <a href={country.maps.googleMaps} ><b>You can find {country.name.common} on google maps on this link </b> </a> </p>\r\n\r\n                        <b> <p>Capital city: {country.capital}</p></b>\r\n\r\n\r\n                        <div >\r\n                            <StyledBtnForSingleCountry className={stateForBtnBorders ? 'transform' : ''} onClick={() => {\r\n\r\n                                setStateForBtnBorders(!stateForBtnBorders)\r\n\r\n                                if (borders.length < country.borders?.length) {\r\n                                    country.borders.map(code => axios.get(`https://restcountries.com/v3.1/alpha/${code}`).then(res => {\r\n                                        setBorders(prev => [...prev, res.data[0].name.common])\r\n                                    }))\r\n                                }\r\n                            }}> {stateForBtnBorders ? `Hide ${country.name.common} 'Borders` : `Click here for ${country.name.common} 'Borders`} </StyledBtnForSingleCountry>\r\n\r\n\r\n                            {\r\n                                stateForBtnBorders ?\r\n\r\n                                    borders.length !== 0 ?\r\n                                        <>\r\n                                            <b>\r\n                                                <p> {country.name.common} has common border with {borders.length} countries:</p>\r\n\r\n                                                <ul>{borders.map((border, i) => <li key={Math.random() * 1000}>{i + 1}: {border}  </li>)} </ul>\r\n\r\n                                            </b>\r\n                                        </>\r\n                                        :\r\n                                        <><b><p> {country.name.common} has no borders</p></b></>\r\n\r\n                                    :\r\n                                    <></>\r\n                            }\r\n                        </div>\r\n\r\n\r\n                        <b> <p>{country.name.common} has population of {country.population} citizens </p></b>\r\n\r\n\r\n\r\n\r\n\r\n                        <div>\r\n\r\n                            <StyledBtnForSingleCountry className={stateForBtnRangByPopulation ? 'transform' : ''} onClick={() => {\r\n                                console.log(countries);\r\n                                setStateForBtnRangByPopulation(!stateForBtnRangByPopulation)\r\n\r\n                                setindexPopulationAndArea(rangByPopulationAndArea(countries, country))\r\n\r\n                            }}>{stateForBtnRangByPopulation ? 'Hide Rang By Population' : `Click to see Rang ${country.name.common} By Population`}</StyledBtnForSingleCountry>\r\n\r\n\r\n                            {stateForBtnRangByPopulation ? <div>    {indexPopulationAndArea}</div> : <></>}\r\n\r\n                        </div>\r\n\r\n\r\n\r\n                        <p><b>Flag of {country.name.common}</b></p>\r\n\r\n                        <div>\r\n                            <img src={country.flags.png} alt={`Flag of ${country.name.common}`} style={{ width: '150px' }} />\r\n                        </div>\r\n\r\n                    </ div >\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CountryRoute;","import { Redirect } from \"react-router\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nconst Home = ({ loggedIn }) => {\r\n\r\n    return <div>\r\n\r\n        {loggedIn ? <Redirect to=\"/countries\" /> : <Redirect to=\"/onlyPagination\" />}\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default Home;","import { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { getAllUsers } from '../Service';\r\n\r\n\r\nimport { StyledLoginandRegisterButton } from './styledComponents'\r\nimport { LoginAndRegisterDiv } from './styledComponents'\r\n\r\nconst Login = ({ setUser, setSelect, setReloadOnLogin, setCurrPage, setOnPage, countries }) => {\r\n\r\n    const [users, setUsers] = useState([])\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n\r\n        getAllUsers().then(res => {\r\n            setUsers(res.data)\r\n            setReloadOnLogin(prev => prev + 1)\r\n        })\r\n        setSelect('')\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <LoginAndRegisterDiv>\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault()\r\n\r\n                setSelect('')\r\n                setReloadOnLogin(prev => prev + 1)\r\n                setCurrPage(0)\r\n                setOnPage(countries)\r\n\r\n                let user = users.find(el => el.username === username && el.password === password)\r\n\r\n                if (user) {\r\n                    setUser(user)\r\n                    history.push(\"/countries\")\r\n                } else {\r\n                    console.log('neispravni podaci');\r\n                }\r\n            }}>\r\n                <div>\r\n                    <p>Username</p>\r\n                    <input type=\"text\" placeholder=\"type your username...\" onChange={(e) => { setUsername(e.target.value) }} />\r\n                </div>\r\n\r\n                <div>\r\n                    <p>Password</p>\r\n                    <input type=\"password\" placeholder=\"Password...\" onChange={(e) => { setPassword(e.target.value) }} />\r\n                </div>\r\n\r\n                <StyledLoginandRegisterButton type=\"submit\" value=\"Login\" />\r\n\r\n                <div>\r\n                    <Link to=\"/register\">Create Your Account</Link>\r\n                </div>\r\n\r\n            </form>\r\n\r\n        </LoginAndRegisterDiv>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { postNewUser, getAllUsers } from \"../Service\";\r\n\r\nimport { StyledLoginandRegisterButton, LoginAndRegisterDiv } from './styledComponents'\r\n\r\nconst Register = ({ setUser }) => {\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <LoginAndRegisterDiv>\r\n\r\n\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault()\r\n\r\n                let newUser = { username, password, email }\r\n\r\n                getAllUsers().then(res => {\r\n                    if (!res.data.some(user => user.username === username || user.email === email)) {\r\n\r\n                        postNewUser(newUser).then(res => {\r\n                            setUser(res.data) //mada i ne mora\r\n                            history.push('/countries')\r\n                        })\r\n                    } else {\r\n                        console.log('Postoji korisnik sa istim usernamom i passwordom');\r\n                    }\r\n                })\r\n\r\n            }}>\r\n                <div>\r\n                    <p>Username</p>\r\n                    <input type=\"text\" placeholder=\"Username...\" onChange={(e) => { setUsername(e.target.value) }} />\r\n                </div>\r\n\r\n                <div>\r\n                    <p>Email</p>\r\n                    <input type=\"email\" placeholder=\"Email...\" onChange={(e) => { setEmail(e.target.value) }} />\r\n                </div>\r\n\r\n                <div>\r\n                    <p>Password</p>\r\n                    <input type=\"password\" placeholder=\"Password...\" onChange={(e) => { setPassword(e.target.value) }} />\r\n                </div>\r\n\r\n                <div>\r\n                    <StyledLoginandRegisterButton type=\"submit\" value=\"Register\" />\r\n                </div>\r\n            </form>\r\n        </LoginAndRegisterDiv>\r\n    )\r\n}\r\nexport default Register;\r\n\r\n\r\n","import { useHistory } from \"react-router\";\r\n\r\nimport { StyledLogoutButton, Logoutdiv } from './styledComponents'\r\n\r\nimport { StyledLoginandRegisterButton } from \"./styledComponents\";\r\n\r\n\r\nconst Logout = ({ setUser, setOnPage, countries, setSelect, setCurrPage, setInputSearch }) => {\r\n\r\n    const history = useHistory()\r\n\r\n    return (\r\n\r\n        <div>\r\n            <StyledLogoutButton onClick={() => {\r\n\r\n                setUser(null)\r\n                setSelect('')\r\n                setOnPage(countries)\r\n\r\n                setCurrPage(0)\r\n\r\n                setInputSearch('')\r\n\r\n                console.log(countries)\r\n                history.push('/')\r\n            }}>LOGOUT</StyledLogoutButton>\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Logout;\r\n","// import logo from './logo.svg';\nimport Mapa from './Mapa.png';\n\n\n// import './App.css';\nimport axios from 'axios'\nimport { useState, useEffect } from \"react\"\nimport Countries from './components/Countries.jsx';\nimport Search from './components/Search';\nimport Select from './components/Select';\nimport Sort from './components/Sort';\nimport CountryRoute from './components/CountryRoute';\n\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Logout from './components/Logout';\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport { StyledNav } from './components/styledComponents';\n\nfunction App() {\n  const [user, setUser] = useState(null)\n\n  const [countries, setCountries] = useState([])\n  const [inputSearch, setInputSearch] = useState('')\n  const [select, setSelect] = useState('')\n  const [onPage, setOnPage] = useState([])\n  const [countriesSelect, setCountriesSelect] = useState([])\n\n  const [change, setChange] = useState(1)\n  const [reloadOnLogin, setReloadOnLogin] = useState(0)\n\n  const [currPage, setCurrPage] = useState(0)\n\n\n  useEffect(() => {\n    axios.get('https://restcountries.com/v3.1/all').then(res => {\n      setCountries(res.data)\n    })\n    // }, [])\n  }, [reloadOnLogin])\n\n\n\n  function fja(countries, onPage) {\n\n    if (onPage.length === 0) {\n      return <Countries countries={countries.filter(country => country.name.common.includes(inputSearch))} select={select} inputSearch={inputSearch} setOnPage={setOnPage} countriesAll={countries} countriesSelect={countriesSelect} change={change} currPage={currPage} setCurrPage={setCurrPage} onPage={onPage} />\n    } else {\n      return <Countries countries={onPage.filter(country => country.name.common.includes(inputSearch))} select={select} inputSearch={inputSearch} setOnPage={setOnPage} countriesAll={countries} countriesSelect={countriesSelect} change={change} currPage={currPage} setCurrPage={setCurrPage} onPage={onPage} />\n    }\n  }\n\n  return (\n    <Router basename='/Pagination---Countries-API---Zavrsni-projekat'>\n      <StyledNav>\n        <Link to=\"/\"><h1>HOME</h1></Link>\n\n        <h1>COUNTRIES</h1>\n\n        {user ? <Logout setUser={setUser} setOnPage={setOnPage} countries={countries} setSelect={setSelect} setCurrPage={setCurrPage} setInputSearch={setInputSearch} /> : <Link to=\"/login\"><h1>LOGIN</h1></Link>}\n\n      </StyledNav>\n\n\n      <Switch>\n        <Route exact path='/'>\n          <Home loggedIn={user} countries={countries} setOnPage={setOnPage} />\n        </Route>\n\n        <Route exact path=\"/countries\">\n\n          <Select countries={countries} setSelect={setSelect} setOnPage={setOnPage} setCountriesSelect={setCountriesSelect} setChange={setChange} setCurrPage={setCurrPage} />\n          <Search setInputSearch={setInputSearch} />\n          <Sort countries={countries} onPage={onPage} setOnPage={setOnPage} select={select} setSelect={setSelect} setChange={setChange} change={change} setCurrPage={setCurrPage} user={user} />\n          {fja(countries, onPage)}\n        </Route>\n\n        <Route exact path=\"/onlyPagination\">\n\n          {fja(countries, onPage)}\n        </Route>\n\n        <Route exact path=\"/login\">\n          <Login setUser={setUser} setSelect={setSelect} setReloadOnLogin={setReloadOnLogin} setCurrPage={setCurrPage} countries={countries} onPage={onPage} setOnPage={setOnPage} />\n        </Route>\n\n        <Route exact path=\"/register\">\n          <Register setUser={setUser} />\n        </Route>\n\n        <Route exact path=\"/countries/:countryName\">\n          <CountryRoute countries={countries} />\n        </Route>\n\n      </Switch>\n    </Router >\n  );\n}\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
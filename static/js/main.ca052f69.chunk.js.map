{"version":3,"sources":["Mapa.png","Service.js","components/styledComponents.jsx","components/Country.jsx","components/Countries.jsx","components/Search.jsx","components/Select.jsx","components/Sort.jsx","components/Home.jsx","components/Login.jsx","components/Register.jsx","components/Logout.jsx","App.js","reportWebVitals.js","index.js"],"names":["getAllUsers","axios","get","StyledLoginandRegisterButton","styled","input","LoginDiv","div","Logoutdiv","StyledBtnPagination","button","StyledCountriesDiv","Mapa","StyledNav","nav","img","Country","countries","country","single","useState","borders","setBorders","indexPopulationAndArea","setindexPopulationAndArea","name","common","src","flags","png","alt","style","width","population","href","maps","googleMaps","onClick","map","code","then","res","prev","data","length","border","i","Math","random","console","log","tmpPopulation","forEach","push","sort","a","b","indexPopulation","indexOf","tmpArea","area","indexArea","rangByPopulationAndArea","height","Countreis","select","inputSearch","setOnPage","countriesAll","countriesSelect","change","numPages","ceil","pages","setPages","currPage","setCurrPage","useEffect","tmp","changePage","page","start","end","slice","disabled","className","value","official","Search","setInputSearch","type","placeholder","onChange","e","target","Select","setSelect","setCountriesSelect","filter","region","includes","selected","Set","Sort","onPage","setChange","copyCountries","setCopyCountries","PopulationFrom9to1","PopulationFrom1to9","default","Home","loggedIn","to","Login","setUser","users","setUsers","username","setUsername","password","setPassword","history","useHistory","onSubmit","preventDefault","user","find","el","Register","email","setEmail","newUser","some","post","Logout","App","setCountries","fja","Countries","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAAe,MAA0B,iC,wBCG5BA,EAAc,kBAAMC,IAAMC,IAAN,mD,gBCCpBC,EAA+BC,IAAOC,MAAV,iJAY5BC,EAAWF,IAAOG,IAAV,6FA6BRC,EAAYJ,IAAOG,IAAV,qQA2BTE,EAAsBL,IAAOM,OAAV,qJAcnBC,EAAqBP,IAAOG,IAAV,iKAKPK,GAMXC,EAAYT,IAAOU,IAAV,uHAEEF,G,GAYCR,IAAOW,IAAV,kF,MCDPC,EAzGC,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OAEnC,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,EAA4DF,mBAAS,MAArE,mBAAOG,EAAP,KAA+BC,EAA/B,KA0BA,OAAOL,EAGC,gCAEI,6BAAKD,EAAQO,KAAKC,SAElB,qBAAKC,IAAKT,EAAQU,MAAMC,IAAKC,IAAG,kBAAaZ,EAAQO,KAAKC,QAAUK,MAAO,CAAEC,MAAO,WAEpF,0DAA6Bd,EAAQO,KAAKC,UAC1C,8BAAIR,EAAQO,KAAKC,OAAjB,sBAA4CR,EAAQe,WAApD,gBACA,oBAAGC,KAAMhB,EAAQiB,KAAKC,WAAtB,2BAAkDlB,EAAQO,KAAKC,OAA/D,qBAQA,wBAAQW,QAAS,WACbnB,EAAQG,QAAQiB,KAAI,SAAAC,GAAI,OAAItC,IAAMC,IAAN,+CAAkDqC,IAAQC,MAAK,SAAAC,GACvFnB,GAAW,SAAAoB,GAAI,4BAAQA,GAAR,CAAcD,EAAIE,KAAK,GAAGlB,KAAKC,mBAFtD,oCAOuB,IAAnBL,EAAQuB,OACJ,qCACI,kCAAK1B,EAAQO,KAAKC,OAAlB,2BAAkDL,EAAQuB,OAA1D,iBAEA,+BAAKvB,EAAQiB,KAAI,SAACO,EAAQC,GAAT,OAAe,+BAAgCA,EAAI,EAApC,KAAyCD,EAAzC,OAAyB,IAAhBE,KAAKC,aAA9C,UAKJ,6BAKR,wBAAQX,QAAS,WACbY,QAAQC,IAAIjC,GACZO,EAhEhB,SAAiCP,EAAWC,GAExC,IAAIiC,EAAgB,GACpBlC,EAAUmC,SAAQ,SAAAlC,GAAO,OAAIiC,EAAcE,KAAKnC,EAAQe,eACxDkB,EAAcG,MAAK,SAACC,EAAGC,GAAQ,GAAID,EAAIC,EAAG,OAAQ,KAClD,IAAIC,EAAkBN,EAAcO,QAAQxC,EAAQe,YAGhD0B,EAAU,GACd1C,EAAUmC,SAAQ,SAAAlC,GAAO,OAAIyC,EAAQN,KAAKnC,EAAQ0C,SAClDD,EAAQL,MAAK,SAACC,EAAGC,GAAQ,GAAID,EAAIC,EAAG,OAAQ,KAC5C,IAAIK,EAAYF,EAAQD,QAAQxC,EAAQ0C,MAGxC,OAAO,qCACH,0DAA6B1C,EAAQO,KAAKC,OAA1C,cAA6D+B,EAAkB,EAA/E,sBAAqGN,EAAcM,GAAnH,gBACA,mDAAsBvC,EAAQO,KAAKC,OAAnC,cAAsDmC,EAAY,EAAlE,sBAAwFF,EAAQE,GAAhG,iBAgDkCC,CAAwB7C,EAAWC,KAFjE,4CAOIK,EACI,uCAAUA,KAGV,gCAQZ,gCACI,6BAAKL,EAAQO,KAAKC,SAElB,qBAAKC,IAAKT,EAAQU,MAAMC,IAAKC,IAAG,kBAAaZ,EAAQO,KAAKC,QAAUK,MAAO,CAAEC,MAAO,QAAS+B,OAAQ,gBCpCtGC,EAvDG,SAAC,GAA0F,IAAxF/C,EAAuF,EAAvFA,UAAWgD,EAA4E,EAA5EA,OAAQC,EAAoE,EAApEA,YAAaC,EAAuD,EAAvDA,UAAWC,EAA4C,EAA5CA,aAAcC,EAA8B,EAA9BA,gBAAiBC,EAAa,EAAbA,OAEvFC,EAAWN,EAASlB,KAAKyB,KAAKH,EAAgBzB,OAAS,IAAMG,KAAKyB,KAAKJ,EAAaxB,OAAS,IAEjG,EAAwBxB,mBAAS,IAAjC,mBAAKqD,EAAL,KAAYC,EAAZ,KACA,EAAgCtD,mBAAS,GAAzC,mBAAOuD,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WAEN,IADA,IAAIC,EAAM,GACDhC,EAAI,EAAGA,EAAIyB,EAAUzB,IAC1BgC,EAAIzB,KAAKP,GAEb4B,EAASI,KACV,CAACb,EAAQC,EAAajD,EAAWqD,IAGpC,IAAMS,EAAa,SAACC,GAChBJ,EAAYI,GACZ,IAAIC,EAAe,GAAPD,EACRE,EAAMD,EAAQ,GAETd,EAATF,EAAmBI,EAAgBc,MAAMF,EAAOC,GAAkBd,EAAae,MAAMF,EAAOC,KAGhG,OACI,gCACI,cAACzE,EAAD,CAAqB2E,SAAUT,GAAYF,EAAM7B,OAAS,EAAGP,QAAS,WAAQ0C,EAAWJ,EAAW,IAApG,kBAGCF,EAAMnC,KAAI,SAAA0C,GAAI,OAAI,eAACvE,EAAD,CAAqB4E,UAAWL,GAAQL,EAAW,YAAc,GAAkCtC,QAAS,WAAQ0C,EAAWC,IAA/H,cACfA,EAAO,EADQ,MAA0F,IAAhBjC,KAAKC,aAWlG,cAACvC,EAAD,CAAqB6E,MAAM,UAAUF,SAAUT,GAAY,EAAGtC,QAAS,WAAQ0C,EAAWJ,EAAW,IAArG,uBAKA,cAAChE,EAAD,UAEKM,EAAUqB,KAAI,SAAApB,GAAO,OAAI,cAAC,EAAD,CAAqCD,UAAWmD,EAAclD,QAASA,EAASC,OAA6B,IAArBF,EAAU2B,QAApF1B,EAAQO,KAAK8D,mBC5CtDC,EATA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACd,OACI,uBAAOC,KAAK,SAASC,YAAY,oBAAoBC,SAAU,SAACC,GAC5DJ,EAAeI,EAAEC,OAAOR,WCerBS,EAlBA,SAAC,GAA6D,IAA3D9E,EAA0D,EAA1DA,UAAW+E,EAA+C,EAA/CA,UAAW7B,EAAoC,EAApCA,UAAW8B,EAAyB,EAAzBA,mBAC/C,OACI,yBAAQL,SAAU,SAACC,GACfG,EAAUH,EAAEC,OAAOR,OACnBnB,EAAUlD,EAAUiF,QAAO,SAAAhF,GAAO,OAAIA,EAAQiF,OAAOC,SAASP,EAAEC,OAAOR,WACvEW,EAAmBhF,EAAUiF,QAAO,SAAAhF,GAAO,OAAIA,EAAQiF,OAAOC,SAASP,EAAEC,OAAOR,WAChFO,EAAEC,OAAOR,MAAQ,MAJrB,UAOI,wBAAQe,UAAQ,EAACf,MAAM,KAAvB,+BAEA,wBAAQA,MAAM,GAAd,iBACC,YAAI,IAAIgB,IAAIrF,EAAUqB,KAAI,SAAApB,GAAO,OAAIA,EAAQiF,YAAU7D,KAAI,SAAA6D,GAAM,OAAI,wBAAqBb,MAAOa,EAA5B,SAAqCA,GAAxBA,UCyEhFI,EAjFF,SAAC,GAAiE,IAA/DtF,EAA8D,EAA9DA,UAAWuF,EAAmD,EAAnDA,OAAQrC,EAA2C,EAA3CA,UAAWF,EAAgC,EAAhCA,OAAQwC,EAAwB,EAAxBA,UAAWnC,EAAa,EAAbA,OAG7D,EAA0ClD,mBAASoF,GAAnD,mBAAOE,EAAP,KAAsBC,EAAtB,KAMA9B,qBAAU,WACN8B,EAAkC,GAAjBH,EAAO5D,OAAP,YAAyB3B,GAAauF,KACxD,CAAClC,EAAQL,EAAQhD,IAIpB,IAAM2F,EAAqB,SAACrD,EAAGC,GAC3B,GAAID,EAAEtB,WAAauB,EAAEvB,WACjB,OAAQ,GAGV4E,EAAqB,SAACtD,EAAGC,GAC3B,GAAID,EAAEtB,WAAauB,EAAEvB,WACjB,OAAQ,GAMhB,OACI,8BAiBI,yBAAQ2D,SAAU,SAACC,GAIf5C,QAAQC,IAAI2C,EAAEC,OAAOR,OACE,uBAAnBO,EAAEC,OAAOR,OAETnB,EAAUuC,EAAcpD,KAAKsD,IAKV,uBAAnBf,EAAEC,OAAOR,OAETnB,EAAUuC,EAAcpD,KAAKuD,IAGjCJ,GAAU,SAAA/D,GAAI,OAAIA,EAAO,KACzBO,QAAQC,IAAIe,GACZhB,QAAQC,IAAIjC,EAAUiF,QAAO,SAAAhF,GAAO,OAAIA,EAAQiF,OAAOC,SAASnC,OAEhE4B,EAAEC,OAAOR,MAAQ,MArBrB,UAwBI,wBAAQwB,SAAO,EAACT,UAAQ,EAACf,MAAM,KAA/B,qCAGA,wBAAQA,MAAM,qBAAd,uDACA,wBAAQA,MAAM,qBAAd,6D,OC7DDyB,EAdF,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEZ,OAAO,8BAIFA,EAAW,cAAC,IAAD,CAAUC,GAAG,eAAkB,cAAC,IAAD,CAAUA,GAAG,uB,QCwDjDC,EAzDD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEb,EAA0B/F,mBAAS,IAAnC,mBAAOgG,EAAP,KAAcC,EAAd,KAEA,EAAgCjG,mBAAS,IAAzC,mBAAOkG,EAAP,KAAiBC,EAAjB,KACA,EAAgCnG,mBAAS,IAAzC,mBAAOoG,EAAP,KAAiBC,EAAjB,KAGMC,EAAUC,cAShB,OAPA9C,qBAAU,WACN7E,IAAcwC,MAAK,SAAAC,GAEf4E,EAAS5E,EAAIE,WAElB,IAGC,cAACrC,EAAD,UACI,uBAAMsH,SAAU,SAAC/B,GACbA,EAAEgC,iBAEF,IAAIC,EAAOV,EAAMW,MAAK,SAAAC,GAAE,OAAIA,EAAGV,WAAaA,GAAYU,EAAGR,WAAaA,KAEpEM,GACAX,EAAQW,GACRJ,EAAQrE,KAAK,eAEbJ,QAAQC,IAAI,sBATpB,UAaI,gCACI,yCACA,uBAAOwC,KAAK,OAAOC,YAAY,wBAAwBC,SAAU,SAACC,GAAQ0B,EAAY1B,EAAEC,OAAOR,aAGnG,gCACI,yCACA,uBAAOI,KAAK,WAAWC,YAAY,cAAcC,SAAU,SAACC,GAAQ4B,EAAY5B,EAAEC,OAAOR,aAG7F,cAACnF,EAAD,CAA8BuF,KAAK,SAASJ,MAAM,UAKlD,8BACI,cAAC,IAAD,CAAM2B,GAAG,YAAT,oCCXLgB,EAvCE,SAAC,GAAgB,EAAdd,QAAe,IAE/B,EAAgC/F,mBAAS,IAAzC,mBAAOkG,EAAP,KAAiBC,EAAjB,KACA,EAAgCnG,mBAAS,IAAzC,mBAAOoG,EAAP,KAAiBC,EAAjB,KACA,EAA0BrG,mBAAS,IAAnC,mBAAO8G,EAAP,KAAcC,EAAd,KAEMT,EAAUC,cAEhB,OACI,mCAGI,uBAAMC,SAAU,SAAC/B,GACbA,EAAEgC,iBAEF,IAAIO,EAAU,CAAEd,WAAUE,WAAUU,SAEpClI,IAAcwC,MAAK,SAAAC,GTlBR,IAACqF,ESmBHrF,EAAIE,KAAK0F,MAAK,SAAAP,GAAI,OAAIA,EAAKR,WAAaA,GAAYQ,EAAKI,QAAUA,KAOpEjF,QAAQC,IAAI,qDT1BR4E,ESqBQM,ETrBCnI,IAAMqI,KAAN,8BAA0CR,ISqBlCtF,MAAK,SAAAC,GAEtBiF,EAAQrE,KAAK,qBAV7B,UAkBI,uBAAOqC,KAAK,OAAOC,YAAY,cAAcC,SAAU,SAACC,GAAQ0B,EAAY1B,EAAEC,OAAOR,UACrF,uBAAOI,KAAK,QAAQC,YAAY,WAAWC,SAAU,SAACC,GAAQsC,EAAStC,EAAEC,OAAOR,UAChF,uBAAOI,KAAK,WAAWC,YAAY,cAAcC,SAAU,SAACC,GAAQ4B,EAAY5B,EAAEC,OAAOR,UAEzF,cAACnF,EAAD,CAA8BuF,KAAK,SAASJ,MAAM,mBCInDiD,EAzCA,SAAC,GAAiB,IAAfpB,EAAc,EAAdA,QAERO,EAAUC,cAEhB,OACI,cAACnH,EAAD,UAEI,wBAAQ6B,QAAS,WACb8E,EAAQ,MACRO,EAAQrE,KAAK,UAFjB,uBCoFGmF,MAtEf,WACE,MAAwBpH,mBAAS,MAAjC,mBAAO0G,EAAP,KAAaX,EAAb,KAEA,EAAkC/F,mBAAS,IAA3C,mBAAOH,EAAP,KAAkBwH,EAAlB,KACA,EAAsCrH,mBAAS,IAA/C,mBAAO8C,EAAP,KAAoBuB,EAApB,KACA,EAA4BrE,mBAAS,IAArC,mBAAO6C,EAAP,KAAe+B,EAAf,KACA,EAA4B5E,mBAAS,IAArC,mBAAOoF,EAAP,KAAerC,EAAf,KACA,EAA8C/C,mBAAS,IAAvD,mBAAOiD,EAAP,KAAwB4B,EAAxB,KAIA,EAA4B7E,mBAAS,GAArC,mBAAOkD,EAAP,KAAemC,EAAf,KAYA,SAASiC,EAAIzH,EAAWuF,GAEtB,OAAsB,IAAlBA,EAAO5D,OACF,cAAC+F,EAAD,CAAW1H,UAAWA,EAAUiF,QAAO,SAAAhF,GAAO,OAAIA,EAAQO,KAAKC,OAAO0E,SAASlC,MAAeD,OAAQA,EAAQC,YAAaA,EAAaC,UAAWA,EAAWC,aAAcnD,EAAWoD,gBAAiBA,EAAiBC,OAAQA,IAEjO,cAACqE,EAAD,CAAW1H,UAAWuF,EAAON,QAAO,SAAAhF,GAAO,OAAIA,EAAQO,KAAKC,OAAO0E,SAASlC,MAAeD,OAAQA,EAAQC,YAAaA,EAAaC,UAAWA,EAAWC,aAAcnD,EAAWoD,gBAAiBA,EAAiBC,OAAQA,IAIzO,OAjBAO,qBAAU,WACR5E,IAAMC,IAAI,sCAAsCsC,MAAK,SAAAC,GACnDgG,EAAahG,EAAIE,WAIlB,IAYD,eAAC,IAAD,WACE,eAAC9B,EAAD,WACE,cAAC,IAAD,CAAMoG,GAAG,IAAT,SAAa,uCACb,cAAC,IAAD,CAAMA,GAAG,SAAT,SAAkB,2CAIpB,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAM7B,SAAUc,MAGlB,eAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,aAAlB,UACE,cAAC,EAAD,CAAQ1B,QAASA,IACjB,cAAC,EAAD,CAAQlG,UAAWA,EAAW+E,UAAWA,EAAW7B,UAAWA,EAAW8B,mBAAoBA,EAAoBQ,UAAWA,IAC7H,cAAC,EAAD,CAAQhB,eAAgBA,IACxB,cAAC,EAAD,CAAMxE,UAAWA,EAAWuF,OAAQA,EAAQrC,UAAWA,EAAWF,OAAQA,EAAQ+B,UAAWA,EAAWS,UAAWA,EAAWnC,OAAQA,IACrIoE,EAAIzH,EAAWuF,MAGlB,cAAC,IAAD,CAAOoC,OAAK,EAACC,KAAK,kBAAlB,SAEGH,EAAIzH,EAAWuF,KAGlB,cAAC,IAAD,CAAOoC,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC,EAAD,CAAO1B,QAASA,MAGlB,cAAC,IAAD,CAAOyB,OAAK,EAACC,KAAK,YAAlB,SACE,cAAC,EAAD,CAAU1B,QAASA,aC3Ed2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxG,MAAK,YAAkD,IAA/CyG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ca052f69.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Mapa.74bd22f6.png\";","import axios from 'axios'\r\n\r\n// export const getAllUsers = () => axios.get(`http://localhost:3006/users`)\r\nexport const getAllUsers = () => axios.get(`https://project-pagination.herokuapp.com/users`)\r\n\r\nexport const postNewUser = (user) => axios.post(`http://localhost:3006/users`, user)\r\n\r\nexport const getAllCountries = () => axios.get('https://restcountries.com/v3.1/all')","import styled from 'styled-components'\r\nimport Mapa from '../Mapa.png';\r\n\r\n\r\nexport const StyledLoginandRegisterButton = styled.input`\r\ncolor: white;\r\nfont-size:1em;\r\nborder-radius: 10px;\r\nbackground: blue;\r\nmargin:25px;\r\n:hover{\r\nbackground:green;\r\n}\r\n`\r\n\r\n\r\nexport const LoginDiv = styled.div`\r\ndisplay:flex;\r\njustify-content:center;\r\nalign-items:flex-end;\r\n\r\n`\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const Logoutdiv = styled.div`\r\nbackground:green;\r\ndisplay:flex;\r\njustify-content:flex-end;\r\n:hover{\r\n    background:red;\r\n    }\r\nbutton{color: white;\r\n    font-size:1em;\r\n    border-radius: 10px;\r\n    background: blue;\r\n    :hover{\r\n    background:red;\r\n    }\r\n}\r\n`\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const StyledBtnPagination = styled.button`\r\ncolor: white;\r\nfont-size:1em;\r\nborder-radius: 10px;\r\nbackground: orange;\r\n\r\n\r\n&.transform{\r\n    background:green;\r\n}\r\n}\r\n`\r\n\r\n\r\nexport const StyledCountriesDiv = styled.div`\r\nwidth:45rm;\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\njustify-content: space-between;\r\nbackground-image: url(${Mapa});\r\nalign-items:flex-start;\r\n`\r\n\r\n\r\n\r\nexport const StyledNav = styled.nav`\r\nwidth:85rm;\r\nbackground-image: url(${Mapa});\r\ndisplay: flex;\r\n\r\njustify-content: space-around;\r\n`\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const styledImg = styled.img`\r\nwidth:200px;\r\nheight: 200px;\r\nborder - radius: 30px;\r\n`\r\n","import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { getAllCountries } from \"../Service\";\r\nimport { styledImg } from \"./styledComponents\";\r\n\r\nconst Country = ({ countries, country, single }) => {\r\n\r\n    const [borders, setBorders] = useState([])\r\n\r\n    const [indexPopulationAndArea, setindexPopulationAndArea] = useState(null)\r\n\r\n\r\n\r\n    function rangByPopulationAndArea(countries, country) {\r\n\r\n        let tmpPopulation = []\r\n        countries.forEach(country => tmpPopulation.push(country.population))\r\n        tmpPopulation.sort((a, b) => { if (a > b) return -1 })\r\n        let indexPopulation = tmpPopulation.indexOf(country.population)\r\n\r\n\r\n        let tmpArea = []\r\n        countries.forEach(country => tmpArea.push(country.area))\r\n        tmpArea.sort((a, b) => { if (a > b) return -1 })\r\n        let indexArea = tmpArea.indexOf(country.area)\r\n\r\n\r\n        return <>\r\n            <p> In aspect of population {country.name.common} is number {indexPopulation + 1} in the world with {tmpPopulation[indexPopulation]} citizens </p>\r\n            <p>In ascpet of Area {country.name.common} is number {indexArea + 1} in the world with {tmpArea[indexArea]}    km^2</p>\r\n        </>\r\n    }\r\n\r\n\r\n\r\n    return single ?\r\n        (\r\n\r\n            <div >\r\n\r\n                <h2>{country.name.common}</h2>\r\n\r\n                <img src={country.flags.png} alt={`Flag of ${country.name.common}`} style={{ width: '150px' }} />\r\n\r\n                <h2>Basic information about {country.name.common}</h2>\r\n                <p>{country.name.common} has population of {country.population} citizens </p>\r\n                <a href={country.maps.googleMaps} > You can find {country.name.common} on google maps</a>\r\n\r\n\r\n\r\n                {/* <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d181140.1199788969!2d20.282513414404647!3d44.815159728413235!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x475a7aa3d7b53fbd%3A0x1db8645cf2177ee4!2z0JHQtdC-0LPRgNCw0LQ!5e0!3m2!1ssr!2srs!4v1633977360243!5m2!1ssr!2srs\" width=\"600\" height=\"450\" style={{ border: '0' }} loading=\"lazy\"></iframe> */}\r\n\r\n\r\n\r\n                <button onClick={() => {\r\n                    country.borders.map(code => axios.get(`https://restcountries.com/v3.1/alpha/${code}`).then(res => {\r\n                        setBorders(prev => [...prev, res.data[0].name.common])\r\n                    }))\r\n                }\r\n                }>Click here for borders</button>\r\n                {\r\n                    borders.length !== 0 ?\r\n                        <>\r\n                            <p> {country.name.common} has common border with {borders.length} countries:</p>\r\n\r\n                            <ul>{borders.map((border, i) => <li key={Math.random() * 1000}>{i + 1}: {border}  </li>)} </ul>\r\n\r\n                            {/* <p>These countries are: {borders.map(border => <span>{border} </span>)} </p> */}\r\n                        </>\r\n                        :\r\n                        <></>\r\n                }\r\n\r\n\r\n\r\n                <button onClick={() => {\r\n                    console.log(countries);\r\n                    setindexPopulationAndArea(rangByPopulationAndArea(countries, country))\r\n                }}>Click to se Rang By Population</button>\r\n\r\n\r\n                {\r\n                    indexPopulationAndArea ?\r\n                        <div>    {indexPopulationAndArea}</div>\r\n\r\n                        :\r\n                        <></>\r\n                }\r\n\r\n\r\n            </div >\r\n        )\r\n        :\r\n        (\r\n            <div>\r\n                <h2>{country.name.common}</h2>\r\n\r\n                <img src={country.flags.png} alt={`Flag of ${country.name.common}`} style={{ width: '500px', height: '250px ' }} />\r\n\r\n\r\n                {/* <img src={country.flags.png} alt={`Flag of ${country.name.common}`} style={{ width: '150px' }} /> */}\r\n\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n\r\n}\r\n\r\nexport default Country;","import Country from \"./Country\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { StyledCountriesDiv } from \"./styledComponents\";\r\nimport { StyledBtnPagination } from \"./styledComponents\";\r\n\r\n\r\nconst Countreis = ({ countries, select, inputSearch, setOnPage, countriesAll, countriesSelect, change }) => {\r\n    // console.log(countriesSelect)\r\n    let numPages = select ? Math.ceil(countriesSelect.length / 10) : Math.ceil(countriesAll.length / 10)\r\n    // console.log(numPages);\r\n    let [pages, setPages] = useState([])\r\n    const [currPage, setCurrPage] = useState(0)\r\n\r\n    useEffect(() => {\r\n        let tmp = []\r\n        for (let i = 0; i < numPages; i++) {\r\n            tmp.push(i)\r\n        }\r\n        setPages(tmp)\r\n    }, [select, inputSearch, countries, change])\r\n\r\n\r\n    const changePage = (page) => {\r\n        setCurrPage(page)\r\n        let start = page * 10\r\n        let end = start + 10\r\n        // console.log(start, end);\r\n        select ? setOnPage(countriesSelect.slice(start, end)) : setOnPage(countriesAll.slice(start, end))\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <StyledBtnPagination disabled={currPage >= pages.length - 1} onClick={() => { changePage(currPage + 1) }}>Next</StyledBtnPagination>\r\n\r\n\r\n            {pages.map(page => <StyledBtnPagination className={page == currPage ? 'transform' : ''} key={Math.random() * 1000000} onClick={() => { changePage(page) }\r\n            }> {page + 1} </StyledBtnPagination>)}\r\n\r\n\r\n            {/*             \r\n            {pages.map(page => <StyledBtnPagination key={Math.random() * 1000000} onClick={() => { changePage(page) }\r\n            }> {page} </StyledBtnPagination>)} */}\r\n\r\n\r\n\r\n\r\n            <StyledBtnPagination value='Preview' disabled={currPage <= 0} onClick={() => { changePage(currPage - 1) }}> Preview </StyledBtnPagination>\r\n\r\n\r\n\r\n\r\n            <StyledCountriesDiv  >\r\n                {/* {countries.slice(0, 10).map(country => <Country key={country.name.official} country={country} />)} */}\r\n                {countries.map(country => <Country key={country.name.official} countries={countriesAll} country={country} single={countries.length === 1} />)}\r\n            </StyledCountriesDiv>\r\n\r\n        </div >\r\n\r\n    );\r\n}\r\n\r\nexport default Countreis;","const Search = ({ setInputSearch }) => {\r\n    return (\r\n        <input type='search' placeholder='search by name...' onChange={(e) => {\r\n            setInputSearch(e.target.value)\r\n            // console.log(inputSearch);\r\n        }} />\r\n    );\r\n}\r\n\r\nexport default Search;","const Select = ({ countries, setSelect, setOnPage, setCountriesSelect }) => {\r\n    return (\r\n        <select onChange={(e) => {\r\n            setSelect(e.target.value)\r\n            setOnPage(countries.filter(country => country.region.includes(e.target.value)))\r\n            setCountriesSelect(countries.filter(country => country.region.includes(e.target.value)))\r\n            e.target.value = '-1'\r\n        }} >\r\n\r\n            <option selected value='-1'>Izaberi kontinent</option>\r\n\r\n            <option value=\"\" >All</option>\r\n            {[...new Set(countries.map(country => country.region))].map(region => <option key={region} value={region}>{region}</option>)}\r\n        </select>\r\n\r\n    );\r\n}\r\n\r\nexport default Select;","\r\n\r\n\r\nimport { useState, useEffect } from \"react\"\r\nconst Sort = ({ countries, onPage, setOnPage, select, setChange, change }) => {\r\n\r\n    // let copyCountries = [...countries]\r\n    const [copyCountries, setCopyCountries] = useState(onPage)\r\n\r\n    // export const [change, setChange] = useState(1)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setCopyCountries(onPage.length == 0 ? [...countries] : onPage)\r\n    }, [change, select, countries])\r\n\r\n\r\n\r\n    const PopulationFrom9to1 = (a, b) => {\r\n        if (a.population > b.population) {\r\n            return -1\r\n        }\r\n    }\r\n    const PopulationFrom1to9 = (a, b) => {\r\n        if (a.population < b.population) {\r\n            return -1\r\n        }\r\n    }\r\n\r\n\r\n    // console.log(countries);\r\n    return (\r\n        <div>\r\n            {/* <button onClick={\r\n\r\n                // setChange(prev=>[...prev,1])\r\n\r\n                setOnPage(copyCountries.sort(PopulationFrom9to1))\r\n\r\n\r\n            }>Sort Countries By Population form Biggest to Lowest</button>\r\n\r\n            <button onClick={\r\n                setOnPage(copyCountries.sort(PopulationFrom1to9))\r\n            }>Sort Countries By Population form Lowest to Biggest </button> */}\r\n\r\n\r\n\r\n\r\n            <select onChange={(e) => {\r\n                // countries.forEach(country => console.log(country.population))\r\n                // setOnPage(countries.sort(e.target.value))\r\n\r\n                console.log(e.target.value)\r\n                if (e.target.value === 'PopulationFrom9to1') {\r\n\r\n                    setOnPage(copyCountries.sort(PopulationFrom9to1))\r\n\r\n\r\n\r\n                }\r\n                if (e.target.value === 'PopulationFrom1to9') {\r\n\r\n                    setOnPage(copyCountries.sort(PopulationFrom1to9))\r\n\r\n                }\r\n                setChange(prev => prev + 1)\r\n                console.log(select)\r\n                console.log(countries.filter(country => country.region.includes(select)))\r\n\r\n                e.target.value = '-1'\r\n            }}>\r\n\r\n                <option default selected value='-1'> Choose option for sort</option>\r\n\r\n\r\n                <option value='PopulationFrom9to1'>Sort By Population form Biggest to Lowest</option>\r\n                <option value='PopulationFrom1to9'>Sort By Population form Lowest to Biggest</option>\r\n\r\n            </select>\r\n\r\n        </div >\r\n    )\r\n}\r\nexport default Sort;\r\n\r\n","import { Redirect } from \"react-router\";\r\n\r\n\r\nconst Home = ({ loggedIn }) => {\r\n\r\n    return <div>\r\n\r\n\r\n\r\n        {loggedIn ? <Redirect to=\"/countries\" /> : <Redirect to=\"/onlyPagination\" />}\r\n\r\n\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default Home;","import { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { getAllUsers } from '../Service';\r\n\r\n\r\nimport { StyledLoginandRegisterButton } from './styledComponents'\r\nimport { LoginDiv } from './styledComponents'\r\n\r\nconst Login = ({ setUser }) => {\r\n\r\n    const [users, setUsers] = useState([])\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        getAllUsers().then(res => {\r\n            //console.log(res.data)\r\n            setUsers(res.data)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <LoginDiv>\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault()\r\n\r\n                let user = users.find(el => el.username === username && el.password === password)\r\n                //console.log(user);\r\n                if (user) {\r\n                    setUser(user)\r\n                    history.push(\"/countries\")\r\n                } else {\r\n                    console.log('neispravni podaci');\r\n                }\r\n\r\n            }}>\r\n                <div>\r\n                    <p>Username</p>\r\n                    <input type=\"text\" placeholder=\"type your username...\" onChange={(e) => { setUsername(e.target.value) }} />\r\n                </div>\r\n\r\n                <div>\r\n                    <p>Password</p>\r\n                    <input type=\"password\" placeholder=\"Password...\" onChange={(e) => { setPassword(e.target.value) }} />\r\n                </div>\r\n\r\n                <StyledLoginandRegisterButton type=\"submit\" value=\"Login\" />\r\n\r\n\r\n\r\n\r\n                <div>\r\n                    <Link to=\"/register\">Registrujte se</Link>\r\n                </div>\r\n\r\n            </form>\r\n\r\n        </LoginDiv>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { postNewUser, getAllUsers } from \"../Service\";\r\n\r\nimport { StyledLoginandRegisterButton } from './styledComponents'\r\n\r\nconst Register = ({ setUser }) => {\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault()\r\n\r\n                let newUser = { username, password, email }\r\n\r\n                getAllUsers().then(res => {\r\n                    if (!res.data.some(user => user.username === username || user.email === email)) {\r\n\r\n                        postNewUser(newUser).then(res => {\r\n                            //setUser(res.data)\r\n                            history.push('/countries')\r\n                        })\r\n                    } else {\r\n                        console.log('Postoji korisnik sa istim usernamom i passwordom');\r\n                    }\r\n                })\r\n\r\n            }}>\r\n                <input type=\"text\" placeholder=\"Username...\" onChange={(e) => { setUsername(e.target.value) }} />\r\n                <input type=\"email\" placeholder=\"Email...\" onChange={(e) => { setEmail(e.target.value) }} />\r\n                <input type=\"password\" placeholder=\"Password...\" onChange={(e) => { setPassword(e.target.value) }} />\r\n                {/* <input type=\"submit\" value=\"Register\" /> */}\r\n                <StyledLoginandRegisterButton type=\"submit\" value=\"Register\" />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\nexport default Register;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { useState } from \"react\";\r\n// import { useHistory } from \"react-router\";\r\n// import { getAllUsers, postUser } from \"../service\";\r\n\r\n// const Register = ({ setUser }) => {\r\n\r\n//     const [username, setUsername] = useState('')\r\n//     const [password, setPassword] = useState('')\r\n//     const [email, setEmail] = useState('')\r\n\r\n//     const history = useHistory()\r\n//     const validPassword = (password) => password.length >= 8\r\n//         && password.split('').some(char => (char >= 'A' && char <= 'Z') || (char >= 'a' && char <= 'z'))\r\n//         && password.split('').some(char => !isNaN(Number(char)))\r\n\r\n//     return (\r\n//         <>\r\n//             <form onSubmit={(e) => {\r\n//                 e.preventDefault()\r\n//                 if (username.length < 4 && !validPassword(password)) {\r\n//                     console.log('Neispravno, mora makar 4 karaktera,nije validna sifra...');\r\n//                     return\r\n//                 }\r\n//                 getAllUsers().then(res => {\r\n//                     if (!res.data.some(user => user.username === username || user.email === email)) {\r\n//                         postUser(username, email, password).then(res => {\r\n//                             setUser(res.data)\r\n//                             history.push('/quotes')\r\n//                         })\r\n//                     }\r\n//                 })\r\n\r\n//             }}>\r\n//                 <input type=\"text\" placeholder=\"Username...\" onChange={(e) => { setUsername(e.target.value) }} />\r\n//                 <input type=\"email\" placeholder=\"Email...\" onChange={(e) => { setEmail(e.target.value) }} />\r\n//                 <input type=\"password\" placeholder=\"Password...\" onChange={(e) => { setPassword(e.target.value) }} />\r\n//                 <input type=\"submit\" value=\"Register\" />\r\n//             </form>\r\n//         </>\r\n//     );\r\n// }\r\n// export default Register;","import { useHistory } from \"react-router\";\r\n\r\nimport { StyledLogoutButton, Logoutdiv } from './styledComponents'\r\nconst Logout = ({ setUser }) => {\r\n\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <Logoutdiv>\r\n\r\n            <button onClick={() => {\r\n                setUser(null)\r\n                history.push('/home')\r\n            }}>Logout</button>\r\n\r\n\r\n\r\n\r\n            {/* <button>1</button>\r\n            <button>2</button>\r\n            <button>3</button>\r\n            <button>4</button>\r\n\r\n\r\n            <button>1</button>\r\n            <button>2</button>\r\n            <button>3</button>\r\n            <button>4</button>\r\n\r\n\r\n            <button>1</button>\r\n            <button>2</button>\r\n            <button>3</button>\r\n            <button>4</button>\r\n            <button>1</button>\r\n            <button>2</button>\r\n            <button>3</button>\r\n            <button>4</button> */}\r\n\r\n\r\n        </Logoutdiv >\r\n    );\r\n}\r\n\r\nexport default Logout;","// import logo from './logo.svg';\nimport Mapa from './Mapa.png';\n\n\n// import './App.css';\nimport axios from 'axios'\nimport { useState, useEffect } from \"react\"\nimport Countries from './components/Countries.jsx';\nimport Search from './components/Search';\nimport Select from './components/Select';\nimport Sort from './components/Sort';\n\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Logout from './components/Logout';\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\n\nimport { StyledNav } from './components/styledComponents';\n\n\n\nfunction App() {\n  const [user, setUser] = useState(null)\n\n  const [countries, setCountries] = useState([])\n  const [inputSearch, setInputSearch] = useState('')\n  const [select, setSelect] = useState('')\n  const [onPage, setOnPage] = useState([])\n  const [countriesSelect, setCountriesSelect] = useState([])\n\n\n\n  const [change, setChange] = useState(1)\n\n\n\n  useEffect(() => {\n    axios.get('https://restcountries.com/v3.1/all').then(res => {\n      setCountries(res.data)\n\n      // setChange(prev => prev + 1)\n    })\n  }, [])\n\n  function fja(countries, onPage) {\n\n    if (onPage.length === 0) {\n      return <Countries countries={countries.filter(country => country.name.common.includes(inputSearch))} select={select} inputSearch={inputSearch} setOnPage={setOnPage} countriesAll={countries} countriesSelect={countriesSelect} change={change} />\n    } else {\n      return <Countries countries={onPage.filter(country => country.name.common.includes(inputSearch))} select={select} inputSearch={inputSearch} setOnPage={setOnPage} countriesAll={countries} countriesSelect={countriesSelect} change={change} />\n    }\n  }\n\n  return (\n    <Router>\n      <StyledNav>\n        <Link to=\"/\"><p>HOME</p></Link>\n        <Link to=\"/login\"><p>LOGIN</p></Link>\n      </StyledNav>\n\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Home loggedIn={user} />\n        </Route>\n\n        <Route exact path=\"/countries\">\n          <Logout setUser={setUser} />\n          <Select countries={countries} setSelect={setSelect} setOnPage={setOnPage} setCountriesSelect={setCountriesSelect} setChange={setChange} />\n          <Search setInputSearch={setInputSearch} />\n          <Sort countries={countries} onPage={onPage} setOnPage={setOnPage} select={select} setSelect={setSelect} setChange={setChange} change={change} />\n          {fja(countries, onPage)}\n        </Route>\n\n        <Route exact path=\"/onlyPagination\">\n\n          {fja(countries, onPage)}\n        </Route>\n\n        <Route exact path=\"/login\">\n          <Login setUser={setUser} />\n        </Route>\n\n        <Route exact path=\"/register\">\n          <Register setUser={setUser} />\n        </Route>\n\n      </Switch>\n    </Router >\n  );\n}\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
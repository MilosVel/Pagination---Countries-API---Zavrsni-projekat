{"version":3,"sources":["Mapa.png","Service.js","components/styledComponents.jsx","components/Country.jsx","components/Countries.jsx","components/Search.jsx","components/Select.jsx","components/Sort.jsx","components/CountryRoute.jsx","components/Home.jsx","components/Login.jsx","components/Register.jsx","components/Logout.jsx","App.js","reportWebVitals.js","index.js"],"names":["getAllUsers","axios","get","StyledLoginandRegisterButton","styled","input","LoginDiv","div","Logoutdiv","StyledBtnForSingleCountry","button","StyledBtnPagination","StyledCountriesDiv","Mapa","StyledNav","nav","img","Country","countries","country","single","useState","borders","setBorders","indexPopulationAndArea","setindexPopulationAndArea","stateForBtnRangByPopulation","setStateForBtnRangByPopulation","stateForBtnBorders","setStateForBtnBorders","name","common","href","maps","googleMaps","className","onClick","console","log","length","map","code","then","res","prev","data","border","i","Math","random","population","tmpPopulation","forEach","push","sort","a","b","indexPopulation","indexOf","tmpArea","area","indexArea","rangByPopulationAndArea","src","flags","png","alt","style","width","to","height","Countreis","select","inputSearch","setOnPage","countriesAll","countriesSelect","change","currPage","setCurrPage","numPages","ceil","pages","setPages","useEffect","tmp","changePage","page","start","end","slice","disabled","value","official","Search","setInputSearch","type","placeholder","onChange","e","target","Select","setSelect","setCountriesSelect","filter","region","includes","Set","Sort","onPage","setChange","copyCountries","setCopyCountries","PopulationFrom9to1","PopulationFrom1to9","CountryRoute","countryName","useParams","find","Home","loggedIn","Login","setUser","setReloadOnLogin","users","setUsers","username","setUsername","password","setPassword","history","useHistory","onSubmit","preventDefault","user","el","Register","email","setEmail","newUser","some","post","Logout","App","setCountries","reloadOnLogin","fja","Countries","basename","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64812fea.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Mapa.74bd22f6.png\";","import axios from 'axios'\r\n\r\n// export const getAllUsers = () => axios.get(`http://localhost:3006/users`) // ovo je za LocalHost\r\nexport const getAllUsers = () => axios.get(`https://project-pagination.herokuapp.com/users`)\r\n\r\n// export const postNewUser = (user) => axios.post(`http://localhost:3006/users`, user) // ovo je za LocalHost\r\nexport const postNewUser = (user) => axios.post(`https://project-pagination.herokuapp.com/users`, user)\r\n\r\nexport const getAllCountries = () => axios.get('https://restcountries.com/v3.1/all')","import styled from 'styled-components'\r\nimport Mapa from '../Mapa.png';\r\n\r\n\r\nexport const StyledLoginandRegisterButton = styled.input`\r\ncolor: white;\r\nfont-size:1em;\r\nborder-radius: 10px;\r\nbackground: blue;\r\nmargin:25px;\r\n:hover{\r\nbackground:green;\r\n}\r\n`\r\n\r\n\r\nexport const LoginDiv = styled.div`\r\ndisplay:flex;\r\njustify-content:center;\r\nalign-items:flex-end;\r\n\r\n`\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const Logoutdiv = styled.div`\r\nbackground:green;\r\ndisplay:flex;\r\njustify-content:flex-end;\r\n:hover{\r\n    background:red;\r\n    }\r\nbutton{color: white;\r\n    font-size:1em;\r\n    border-radius: 10px;\r\n    background: blue;\r\n    :hover{\r\n    background:red;\r\n    }\r\n}\r\n`\r\n\r\n\r\n\r\n\r\nexport const StyledBtnForSingleCountry = styled.button`\r\ncolor: red;\r\nfont-size:1em;\r\nborder-radius: 10px;\r\nbackground: white;\r\n\r\n:hover{\r\n    background:lightblue;\r\n    }\r\n&.transform{\r\n    background: orange;\r\n    \r\n}\r\n}\r\n`\r\n// display: none;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const StyledBtnPagination = styled.button`\r\ncolor: white;\r\nfont-size:1em;\r\nborder-radius: 10px;\r\nbackground: orange;\r\n&.transform{\r\n    \r\n    background:red;\r\n    display:hidden;\r\n}\r\n}\r\n`\r\n\r\n\r\nexport const StyledCountriesDiv = styled.div`\r\nwidth:45rm;\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\njustify-content: space-between;\r\nbackground-image: url(${Mapa});\r\nalign-items:flex-start;\r\n`\r\n\r\n\r\n\r\nexport const StyledNav = styled.nav`\r\nwidth:85rm;\r\nbackground-image: url(${Mapa});\r\ndisplay: flex;\r\n\r\njustify-content: space-around;\r\n`\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const styledImg = styled.img`\r\nwidth:200px;\r\nheight: 200px;\r\nborder - radius: 30px;\r\n`\r\n","import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { getAllCountries } from \"../Service\";\r\nimport { styledImg, StyledBtnForSingleCountry } from \"./styledComponents\";\r\n\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Country = ({ countries, country, single }) => {\r\n\r\n    const [borders, setBorders] = useState([])\r\n\r\n    const [indexPopulationAndArea, setindexPopulationAndArea] = useState(null)\r\n\r\n\r\n    let [stateForBtnRangByPopulation, setStateForBtnRangByPopulation] = useState(false)\r\n    let [stateForBtnBorders, setStateForBtnBorders] = useState(false)\r\n\r\n    // useEffect(() => {\r\n\r\n\r\n    // }, [])\r\n\r\n\r\n\r\n\r\n    function rangByPopulationAndArea(countries, country) {\r\n\r\n        let tmpPopulation = []\r\n        countries.forEach(country => tmpPopulation.push(country.population))\r\n        tmpPopulation.sort((a, b) => { if (a > b) return -1 })\r\n        let indexPopulation = tmpPopulation.indexOf(country.population)\r\n\r\n\r\n        let tmpArea = []\r\n        countries.forEach(country => tmpArea.push(country.area))\r\n        tmpArea.sort((a, b) => { if (a > b) return -1 })\r\n        let indexArea = tmpArea.indexOf(country.area)\r\n\r\n\r\n        return <>\r\n            <b>\r\n                <p> In aspect of population {country.name.common} is number {indexPopulation + 1} in the world with {tmpPopulation[indexPopulation]} citizens </p>\r\n                <p>In ascpet of Area {country.name.common} is number {indexArea + 1} in the world with {tmpArea[indexArea]}    km^2</p>\r\n            </b>\r\n        </>\r\n    }\r\n\r\n\r\n\r\n    return single ?\r\n        (\r\n\r\n            <div >\r\n                <h2>Basic information about {country.name.common}</h2>\r\n\r\n                <p> <a href={country.maps.googleMaps} ><b>You can find {country.name.common} on google maps on this link </b> </a> </p>\r\n\r\n                {/* BTN for Borders */}\r\n\r\n                <div >\r\n                    <StyledBtnForSingleCountry className={stateForBtnBorders ? 'transform' : ''} onClick={() => {\r\n\r\n                        setStateForBtnBorders(!stateForBtnBorders)\r\n                        console.log(country.borders.length)\r\n                        console.log(country.borders)\r\n\r\n                        if (borders.length < country.borders.length) {\r\n                            country.borders.map(code => axios.get(`https://restcountries.com/v3.1/alpha/${code}`).then(res => {\r\n                                setBorders(prev => [...prev, res.data[0].name.common])\r\n                            }))\r\n                        }\r\n                    }}> {stateForBtnBorders ? `Hide ${country.name.common} 'Borders` : `Click here for ${country.name.common} 'Borders`} </StyledBtnForSingleCountry>\r\n\r\n\r\n                    {\r\n                        stateForBtnBorders ?\r\n\r\n                            borders.length !== 0 ?\r\n                                <>\r\n                                    <b>\r\n                                        <p> {country.name.common} has common border with {borders.length} countries:</p>\r\n\r\n                                        <ul>{borders.map((border, i) => <li key={Math.random() * 1000}>{i + 1}: {border}  </li>)} </ul>\r\n\r\n                                    </b>\r\n                                </>\r\n                                :\r\n                                <></>\r\n\r\n                            :\r\n                            <></>\r\n                    }\r\n                </div>\r\n\r\n\r\n                <b> <p>{country.name.common} has population of {country.population} citizens </p></b>\r\n\r\n\r\n\r\n\r\n\r\n                {/* BTN Rang by Population */}\r\n                <div>\r\n\r\n                    <StyledBtnForSingleCountry className={stateForBtnRangByPopulation ? 'transform' : ''} onClick={() => {\r\n                        console.log(countries);\r\n                        setStateForBtnRangByPopulation(!stateForBtnRangByPopulation)\r\n\r\n                        setindexPopulationAndArea(rangByPopulationAndArea(countries, country))\r\n\r\n                    }}>{stateForBtnRangByPopulation ? 'Hide Rang By Population' : `Click to see Rang ${country.name.common} By Population`}</StyledBtnForSingleCountry>\r\n\r\n\r\n                    {stateForBtnRangByPopulation ? <div>    {indexPopulationAndArea}</div> : <></>}\r\n\r\n                </div>\r\n\r\n\r\n\r\n                <p><b>Flag of {country.name.common}</b></p>\r\n\r\n                <div>\r\n                    <img src={country.flags.png} alt={`Flag of ${country.name.common}`} style={{ width: '150px' }} />\r\n                </div>\r\n\r\n            </div >\r\n        )\r\n        :\r\n        (\r\n            <div>\r\n                {/* <h2>{country.name.common}</h2> */}\r\n\r\n\r\n                <Link to={`/countries/${country.name.common}`}><h1>{country.name.common}</h1></Link>\r\n\r\n\r\n                <img src={country.flags.png} alt={`Flag of ${country.name.common}`} style={{ width: '500px', height: '250px ' }} />\r\n\r\n\r\n                {/* <img src={country.flags.png} alt={`Flag of ${country.name.common}`} style={{ width: '150px' }} /> */}\r\n\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n\r\n}\r\n\r\nexport default Country;","import Country from \"./Country\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { StyledCountriesDiv } from \"./styledComponents\";\r\nimport { StyledBtnPagination } from \"./styledComponents\";\r\n\r\n\r\nconst Countreis = ({ countries, select, inputSearch, setOnPage, countriesAll, countriesSelect, change, currPage, setCurrPage }) => {\r\n    // console.log(countriesSelect)\r\n    let numPages = select ? Math.ceil(countriesSelect.length / 10) : Math.ceil(countriesAll.length / 10)\r\n    // console.log(numPages);\r\n    let [pages, setPages] = useState([])\r\n\r\n\r\n    // const [currPage, setCurrPage] = useState(0)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        let tmp = []\r\n        for (let i = 0; i < numPages; i++) {\r\n            tmp.push(i)\r\n        }\r\n        setPages(tmp)\r\n    }, [select, inputSearch, countries, change])\r\n\r\n\r\n    const changePage = (page) => {\r\n        setCurrPage(page)\r\n        let start = page * 10\r\n        let end = start + 10\r\n        // console.log(start, end);\r\n        select ? setOnPage(countriesSelect.slice(start, end)) : setOnPage(countriesAll.slice(start, end))\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <StyledBtnPagination disabled={currPage >= pages.length - 1} onClick={() => { changePage(currPage + 1) }}>Next</StyledBtnPagination>\r\n\r\n\r\n            {pages.map(page => <StyledBtnPagination className={page == currPage ? 'transform' : ''} key={Math.random() * 1000000} onClick={() => { changePage(page) }\r\n            }> {page + 1} </StyledBtnPagination>)}\r\n\r\n\r\n            {/*             \r\n            {pages.map(page => <StyledBtnPagination key={Math.random() * 1000000} onClick={() => { changePage(page) }\r\n            }> {page} </StyledBtnPagination>)} */}\r\n\r\n\r\n\r\n\r\n            <StyledBtnPagination value='Preview' disabled={currPage <= 0} onClick={() => { changePage(currPage - 1) }}> Preview </StyledBtnPagination>\r\n\r\n\r\n\r\n\r\n            <StyledCountriesDiv  >\r\n                {/* {countries.slice(0, 10).map(country => <Country key={country.name.official} country={country} />)} */}\r\n                {countries.map(country => <Country key={country.name.official} countries={countriesAll} country={country} single={countries.length === 1} />)}\r\n            </StyledCountriesDiv>\r\n\r\n        </div >\r\n\r\n    );\r\n}\r\n\r\nexport default Countreis;","const Search = ({ setInputSearch }) => {\r\n    return (\r\n        <input type='search' placeholder='search by name...' onChange={(e) => {\r\n            setInputSearch(e.target.value)\r\n            // console.log(inputSearch);\r\n        }} />\r\n    );\r\n}\r\n\r\nexport default Search;","const Select = ({ countries, setSelect, setOnPage, setCountriesSelect, setCurrPage }) => {\r\n    return (\r\n        <select onChange={(e) => {\r\n            setSelect(e.target.value)\r\n            setOnPage(countries.filter(country => country.region.includes(e.target.value)))\r\n            setCountriesSelect(countries.filter(country => country.region.includes(e.target.value)))\r\n            e.target.value = '-1'\r\n            setCurrPage(0)\r\n        }} >\r\n\r\n            <option value='-1'>Izaberi kontinent</option>\r\n\r\n            <option value=\"\" >All</option>\r\n            {[...new Set(countries.map(country => country.region))].map(region => <option key={region} value={region}>{region}</option>)}\r\n        </select>\r\n\r\n    );\r\n}\r\n\r\nexport default Select;","\r\n\r\n\r\nimport { useState, useEffect } from \"react\"\r\nconst Sort = ({ countries, onPage, setOnPage, select, setChange, change, setCurrPage }) => {\r\n\r\n    // let copyCountries = [...countries]\r\n    const [copyCountries, setCopyCountries] = useState(onPage)\r\n\r\n    // export const [change, setChange] = useState(1)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setCopyCountries(onPage.length == 0 ? [...countries] : onPage)\r\n    }, [change, select, countries])\r\n\r\n\r\n\r\n    const PopulationFrom9to1 = (a, b) => {\r\n        if (a.population > b.population) {\r\n            return -1\r\n        }\r\n    }\r\n    const PopulationFrom1to9 = (a, b) => {\r\n        if (a.population < b.population) {\r\n            return -1\r\n        }\r\n    }\r\n\r\n\r\n    // console.log(countries);\r\n    return (\r\n        <div>\r\n            {/* <button onClick={\r\n\r\n                // setChange(prev=>[...prev,1])\r\n\r\n                setOnPage(copyCountries.sort(PopulationFrom9to1))\r\n\r\n\r\n            }>Sort Countries By Population form Biggest to Lowest</button>\r\n\r\n            <button onClick={\r\n                setOnPage(copyCountries.sort(PopulationFrom1to9))\r\n            }>Sort Countries By Population form Lowest to Biggest </button> */}\r\n\r\n\r\n\r\n\r\n            <select onChange={(e) => {\r\n                // countries.forEach(country => console.log(country.population))\r\n                // setOnPage(countries.sort(e.target.value))\r\n\r\n                console.log(e.target.value)\r\n                if (e.target.value === 'PopulationFrom9to1') {\r\n\r\n                    setOnPage(copyCountries.sort(PopulationFrom9to1))\r\n\r\n                }\r\n                if (e.target.value === 'PopulationFrom1to9') {\r\n\r\n                    setOnPage(copyCountries.sort(PopulationFrom1to9))\r\n\r\n                }\r\n                setChange(prev => prev + 1)\r\n                console.log(select)\r\n                console.log(countries.filter(country => country.region.includes(select)))\r\n\r\n                e.target.value = '-1'\r\n\r\n                setCurrPage(0)\r\n\r\n            }}>\r\n\r\n                <option value='-1'> Choose option for sort</option>\r\n\r\n\r\n                <option value='PopulationFrom9to1'>Sort By Population form Biggest to Lowest</option>\r\n                <option value='PopulationFrom1to9'>Sort By Population form Lowest to Biggest</option>\r\n\r\n            </select>\r\n\r\n        </div >\r\n    )\r\n}\r\nexport default Sort;\r\n\r\n","import { useParams } from \"react-router\";\r\n\r\nconst CountryRoute = ({ countries }) => {\r\n\r\n    // let obj = useParams()\r\n    // console.log(obj)\r\n\r\n    let { countryName } = useParams()\r\n    // console.log(countryName)\r\n\r\n    let country = countries.find(country => country.name.common == countryName)\r\n    console.log(country)\r\n\r\n\r\n    return (\r\n        <div>\r\n            <p>Radi</p>\r\n            <img src={country?.flags.png} alt={`Flag of ${country?.name.common}`} style={{ width: '150px' }} />\r\n            <p>Radi</p>\r\n\r\n\r\n\r\n            <p>Radi</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CountryRoute;","import { Redirect } from \"react-router\";\r\n\r\n\r\nconst Home = ({ loggedIn }) => {\r\n\r\n    return <div>\r\n\r\n\r\n\r\n        {loggedIn ? <Redirect to=\"/countries\" /> : <Redirect to=\"/onlyPagination\" />}\r\n\r\n\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default Home;","import { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { getAllUsers } from '../Service';\r\n\r\n\r\nimport { StyledLoginandRegisterButton } from './styledComponents'\r\nimport { LoginDiv } from './styledComponents'\r\n\r\nconst Login = ({ setUser, setSelect, setReloadOnLogin }) => {\r\n\r\n    const [users, setUsers] = useState([])\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        getAllUsers().then(res => {\r\n            //console.log(res.data)\r\n            setUsers(res.data)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <LoginDiv>\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault()\r\n\r\n                setSelect('')\r\n                setReloadOnLogin(prev => prev + 1)\r\n\r\n                let user = users.find(el => el.username === username && el.password === password)\r\n                //console.log(user);\r\n                if (user) {\r\n                    setUser(user)\r\n                    history.push(\"/countries\")\r\n                } else {\r\n                    console.log('neispravni podaci');\r\n                }\r\n            }}>\r\n                <div>\r\n                    <p>Username</p>\r\n                    <input type=\"text\" placeholder=\"type your username...\" onChange={(e) => { setUsername(e.target.value) }} />\r\n                </div>\r\n\r\n                <div>\r\n                    <p>Password</p>\r\n                    <input type=\"password\" placeholder=\"Password...\" onChange={(e) => { setPassword(e.target.value) }} />\r\n                </div>\r\n\r\n                <StyledLoginandRegisterButton type=\"submit\" value=\"Login\" />\r\n\r\n\r\n\r\n\r\n                <div>\r\n                    <Link to=\"/register\">Registrujte se</Link>\r\n                </div>\r\n\r\n            </form>\r\n\r\n        </LoginDiv>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { postNewUser, getAllUsers } from \"../Service\";\r\n\r\nimport { StyledLoginandRegisterButton } from './styledComponents'\r\n\r\nconst Register = ({ setUser }) => {\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault()\r\n\r\n                let newUser = { username, password, email }\r\n\r\n                getAllUsers().then(res => {\r\n                    if (!res.data.some(user => user.username === username || user.email === email)) {\r\n\r\n                        postNewUser(newUser).then(res => {\r\n                            //setUser(res.data)\r\n                            history.push('/countries')\r\n                        })\r\n                    } else {\r\n                        console.log('Postoji korisnik sa istim usernamom i passwordom');\r\n                    }\r\n                })\r\n\r\n            }}>\r\n                <input type=\"text\" placeholder=\"Username...\" onChange={(e) => { setUsername(e.target.value) }} />\r\n                <input type=\"email\" placeholder=\"Email...\" onChange={(e) => { setEmail(e.target.value) }} />\r\n                <input type=\"password\" placeholder=\"Password...\" onChange={(e) => { setPassword(e.target.value) }} />\r\n                {/* <input type=\"submit\" value=\"Register\" /> */}\r\n                <StyledLoginandRegisterButton type=\"submit\" value=\"Register\" />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\nexport default Register;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { useState } from \"react\";\r\n// import { useHistory } from \"react-router\";\r\n// import { getAllUsers, postUser } from \"../service\";\r\n\r\n// const Register = ({ setUser }) => {\r\n\r\n//     const [username, setUsername] = useState('')\r\n//     const [password, setPassword] = useState('')\r\n//     const [email, setEmail] = useState('')\r\n\r\n//     const history = useHistory()\r\n//     const validPassword = (password) => password.length >= 8\r\n//         && password.split('').some(char => (char >= 'A' && char <= 'Z') || (char >= 'a' && char <= 'z'))\r\n//         && password.split('').some(char => !isNaN(Number(char)))\r\n\r\n//     return (\r\n//         <>\r\n//             <form onSubmit={(e) => {\r\n//                 e.preventDefault()\r\n//                 if (username.length < 4 && !validPassword(password)) {\r\n//                     console.log('Neispravno, mora makar 4 karaktera,nije validna sifra...');\r\n//                     return\r\n//                 }\r\n//                 getAllUsers().then(res => {\r\n//                     if (!res.data.some(user => user.username === username || user.email === email)) {\r\n//                         postUser(username, email, password).then(res => {\r\n//                             setUser(res.data)\r\n//                             history.push('/quotes')\r\n//                         })\r\n//                     }\r\n//                 })\r\n\r\n//             }}>\r\n//                 <input type=\"text\" placeholder=\"Username...\" onChange={(e) => { setUsername(e.target.value) }} />\r\n//                 <input type=\"email\" placeholder=\"Email...\" onChange={(e) => { setEmail(e.target.value) }} />\r\n//                 <input type=\"password\" placeholder=\"Password...\" onChange={(e) => { setPassword(e.target.value) }} />\r\n//                 <input type=\"submit\" value=\"Register\" />\r\n//             </form>\r\n//         </>\r\n//     );\r\n// }\r\n// export default Register;","import { useHistory } from \"react-router\";\r\n\r\nimport { StyledLogoutButton, Logoutdiv } from './styledComponents'\r\nconst Logout = ({ setUser }) => {\r\n\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <Logoutdiv>\r\n\r\n            <button onClick={() => {\r\n                setUser(null)\r\n                history.push('/home')\r\n            }}>Logout</button>\r\n\r\n\r\n\r\n\r\n            {/* <button>1</button>\r\n            <button>2</button>\r\n            <button>3</button>\r\n            <button>4</button>\r\n\r\n\r\n            <button>1</button>\r\n            <button>2</button>\r\n            <button>3</button>\r\n            <button>4</button>\r\n\r\n\r\n            <button>1</button>\r\n            <button>2</button>\r\n            <button>3</button>\r\n            <button>4</button>\r\n            <button>1</button>\r\n            <button>2</button>\r\n            <button>3</button>\r\n            <button>4</button> */}\r\n\r\n\r\n        </Logoutdiv >\r\n    );\r\n}\r\n\r\nexport default Logout;","// import logo from './logo.svg';\nimport Mapa from './Mapa.png';\n\n\n// import './App.css';\nimport axios from 'axios'\nimport { useState, useEffect } from \"react\"\nimport Countries from './components/Countries.jsx';\nimport Search from './components/Search';\nimport Select from './components/Select';\nimport Sort from './components/Sort';\nimport CountryRoute from './components/CountryRoute';\n\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Logout from './components/Logout';\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\n\nimport { StyledNav } from './components/styledComponents';\n\n\n\nfunction App() {\n  const [user, setUser] = useState(null)\n\n  const [countries, setCountries] = useState([])\n  const [inputSearch, setInputSearch] = useState('')\n  const [select, setSelect] = useState('')\n  const [onPage, setOnPage] = useState([])\n  const [countriesSelect, setCountriesSelect] = useState([])\n\n\n\n  const [change, setChange] = useState(1)\n  const [reloadOnLogin, setReloadOnLogin] = useState(0)\n\n\n  const [currPage, setCurrPage] = useState(0)\n\n\n\n  useEffect(() => {\n    axios.get('https://restcountries.com/v3.1/all').then(res => {\n      setCountries(res.data)\n\n      // setChange(prev => prev + 1)\n    })\n  }, [reloadOnLogin])\n\n  function fja(countries, onPage) {\n\n    if (onPage.length === 0) {\n      return <Countries countries={countries.filter(country => country.name.common.includes(inputSearch))} select={select} inputSearch={inputSearch} setOnPage={setOnPage} countriesAll={countries} countriesSelect={countriesSelect} change={change} currPage={currPage} setCurrPage={setCurrPage} />\n    } else {\n      return <Countries countries={onPage.filter(country => country.name.common.includes(inputSearch))} select={select} inputSearch={inputSearch} setOnPage={setOnPage} countriesAll={countries} countriesSelect={countriesSelect} change={change} currPage={currPage} setCurrPage={setCurrPage} />\n    }\n  }\n\n  return (\n    <Router basename='/Pagination---Countries-API---Zavrsni-projekat'>\n      <StyledNav>\n        <Link to=\"/\"><h1>HOME</h1></Link>\n\n\n        <h1>Countries</h1>\n\n        <h1>Countries</h1>\n\n        <Link to=\"/login\"><h1>LOGIN</h1></Link>\n      </StyledNav>\n\n\n      <Switch>\n        <Route exact path='/'>\n          <Home loggedIn={user} />\n        </Route>\n\n\n        <Route exact path=\"/countries\">\n          <Logout setUser={setUser} />\n          <Select countries={countries} setSelect={setSelect} setOnPage={setOnPage} setCountriesSelect={setCountriesSelect} setChange={setChange} setCurrPage={setCurrPage} />\n          <Search setInputSearch={setInputSearch} />\n          <Sort countries={countries} onPage={onPage} setOnPage={setOnPage} select={select} setSelect={setSelect} setChange={setChange} change={change} setCurrPage={setCurrPage} />\n          {fja(countries, onPage)}\n        </Route>\n\n        <Route exact path=\"/onlyPagination\">\n\n          {fja(countries, onPage)}\n        </Route>\n\n        <Route exact path=\"/login\">\n          <Login setUser={setUser} setSelect={setSelect} setReloadOnLogin={setReloadOnLogin} />\n        </Route>\n\n        <Route exact path=\"/register\">\n          <Register setUser={setUser} />\n        </Route>\n\n\n        <Route exact path=\"/countries/:countryName\">\n          <CountryRoute countries={countries} />\n        </Route>\n\n\n\n\n\n      </Switch>\n    </Router >\n  );\n}\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}